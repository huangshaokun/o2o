kind: pipeline
name: default

steps:
- name: golang
  image: golang:1.12.5
  commands:
  - mkdir dist
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod vendor -o dist/server_linux64 -ldflags "-s -w" ./server
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod vendor -o dist/client_linux64 -ldflags "-s -w" ./client
  - CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -mod vendor -o dist/server_arm64 -ldflags "-s -w" ./server
  - CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -mod vendor -o dist/client_arm64 -ldflags "-s -w" ./client
  - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -mod vendor -o dist/server_darwin64 -ldflags "-s -w" ./server
  - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -mod vendor -o dist/client_darwin64 -ldflags "-s -w" ./client
  - CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -mod vendor -o dist/server_win64.exe -ldflags "-s -w" ./server
  - CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -mod vendor -o dist/client_win64.exe -ldflags "-s -w" ./client
  - CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -mod vendor -o dist/server_win32.exe -ldflags "-s -w" ./server
  - CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -mod vendor -o dist/client_win32.exe -ldflags "-s -w" ./client
  when:
    event: tag
- name: release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files: dist/*
  when:
    event: tag

- name: docker
  image: plugins/docker
  settings:
    repo: ohko/o2o
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
